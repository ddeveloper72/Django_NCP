# Generated by Django 5.2.4 on 2025-09-15 17:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("patient_data", "0005_remove_documenttranslation_document_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PatientSession",
            fields=[
                (
                    "session_id",
                    models.CharField(
                        max_length=64, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("terminated", "Terminated"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "encryption_key_version",
                    models.PositiveIntegerField(
                        help_text="Version of encryption key used"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "country_code",
                    models.CharField(
                        help_text="ISO country code for healthcare system", max_length=3
                    ),
                ),
                (
                    "search_criteria_hash",
                    models.CharField(
                        help_text="Hash of original search criteria", max_length=64
                    ),
                ),
                (
                    "encrypted_patient_data",
                    models.TextField(
                        blank=True,
                        help_text="Encrypted patient identifiers and metadata",
                    ),
                ),
                (
                    "cda_content_hash",
                    models.CharField(
                        blank=True,
                        help_text="Hash of CDA content for integrity",
                        max_length=64,
                    ),
                ),
                ("access_count", models.PositiveIntegerField(default=0)),
                (
                    "last_action",
                    models.CharField(
                        blank=True,
                        help_text="Last action performed in session",
                        max_length=255,
                    ),
                ),
                ("client_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent_hash", models.CharField(blank=True, max_length=64)),
                (
                    "requires_rotation",
                    models.BooleanField(
                        default=False,
                        help_text="Session should be rotated on next access",
                    ),
                ),
                (
                    "security_flags",
                    models.JSONField(
                        default=dict, help_text="Security-related flags and metadata"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "patient_sessions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PatientDataCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cache_key", models.CharField(max_length=255, unique=True)),
                (
                    "data_type",
                    models.CharField(
                        help_text="Type of cached data (patient_summary, cda_document, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "encrypted_content",
                    models.TextField(help_text="Encrypted cached data"),
                ),
                (
                    "content_hash",
                    models.CharField(
                        help_text="Hash for integrity verification", max_length=64
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField()),
                ("access_count", models.PositiveIntegerField(default=0)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("encryption_key_version", models.PositiveIntegerField()),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cached_data",
                        to="patient_data.patientsession",
                    ),
                ),
            ],
            options={
                "db_table": "patient_data_cache",
            },
        ),
        migrations.CreateModel(
            name="SessionAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "action",
                    models.CharField(help_text="Action performed", max_length=100),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether action was successful"
                    ),
                ),
                (
                    "resource",
                    models.CharField(
                        blank=True,
                        help_text="Resource accessed or modified",
                        max_length=255,
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True, help_text="HTTP method", max_length=10
                    ),
                ),
                ("client_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent_hash", models.CharField(blank=True, max_length=64)),
                (
                    "duration_ms",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Request duration in milliseconds",
                        null=True,
                    ),
                ),
                (
                    "response_status",
                    models.PositiveIntegerField(
                        blank=True, help_text="HTTP response status code", null=True
                    ),
                ),
                (
                    "content_length",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Response content length in bytes",
                        null=True,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if action failed"
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True,
                        help_text="Error code for categorization",
                        max_length=50,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional contextual information"
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to="patient_data.patientsession",
                    ),
                ),
            ],
            options={
                "db_table": "session_audit_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="patientsession",
            index=models.Index(
                fields=["user", "country_code"], name="patient_ses_user_id_091062_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientsession",
            index=models.Index(
                fields=["created_at"], name="patient_ses_created_87ea34_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientsession",
            index=models.Index(
                fields=["expires_at"], name="patient_ses_expires_d0befb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientsession",
            index=models.Index(
                fields=["is_active"], name="patient_ses_is_acti_9ab351_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdatacache",
            index=models.Index(
                fields=["cache_key"], name="patient_dat_cache_k_5ad2f7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdatacache",
            index=models.Index(
                fields=["session", "data_type"], name="patient_dat_session_c2c554_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdatacache",
            index=models.Index(
                fields=["expires_at"], name="patient_dat_expires_e73ecf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sessionauditlog",
            index=models.Index(
                fields=["session", "timestamp"], name="session_aud_session_f21807_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sessionauditlog",
            index=models.Index(
                fields=["action", "timestamp"], name="session_aud_action_5bfc5c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sessionauditlog",
            index=models.Index(
                fields=["success", "timestamp"], name="session_aud_success_401eba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sessionauditlog",
            index=models.Index(
                fields=["client_ip", "timestamp"], name="session_aud_client__bc10a4_idx"
            ),
        ),
    ]

# Generated by Django 5.2.4 on 2025-07-26 22:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="ISO 3166-1 alpha-2 country code",
                        max_length=3,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "ncp_endpoint",
                    models.URLField(help_text="National Contact Point endpoint URL"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Countries",
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("identifier", models.CharField(max_length=100, unique=True)),
                (
                    "organization_type",
                    models.CharField(
                        choices=[
                            ("hospital", "Hospital"),
                            ("clinic", "Clinic"),
                            ("pharmacy", "Pharmacy"),
                            ("laboratory", "Laboratory"),
                            ("radiology", "Radiology Center"),
                            ("primary_care", "Primary Care"),
                        ],
                        max_length=50,
                    ),
                ),
                ("contact_email", models.EmailField(max_length=254)),
                ("address", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ncp_gateway.country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HealthcareProfessional",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("professional_id", models.CharField(max_length=100, unique=True)),
                ("license_number", models.CharField(max_length=100)),
                ("speciality", models.CharField(max_length=100)),
                ("is_authorized_cross_border", models.BooleanField(default=False)),
                (
                    "authorization_level",
                    models.CharField(
                        choices=[
                            ("read_only", "Read Only"),
                            ("full_access", "Full Access"),
                            ("emergency_only", "Emergency Only"),
                        ],
                        default="read_only",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ncp_gateway.organization",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "national_id",
                    models.CharField(
                        help_text="National patient identifier", max_length=50
                    ),
                ),
                (
                    "european_id",
                    models.CharField(
                        blank=True,
                        help_text="European patient identifier",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("birth_date", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "insurance_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "cross_border_consent",
                    models.BooleanField(
                        default=False, help_text="Consent for cross-border data sharing"
                    ),
                ),
                ("consent_date", models.DateTimeField(blank=True, null=True)),
                ("data_sharing_restrictions", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "country_of_origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patients",
                        to="ncp_gateway.country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CrossBorderRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("patient_summary", "Patient Summary"),
                            ("eprescription", "ePrescription"),
                            ("edispensation", "eDispensation"),
                            ("laboratory_results", "Laboratory Results"),
                            ("hospital_discharge", "Hospital Discharge Report"),
                            ("medical_imaging", "Medical Imaging"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("denied", "Denied"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "purpose",
                    models.CharField(
                        choices=[
                            ("treatment", "Treatment"),
                            ("emergency", "Emergency Care"),
                            ("prescription", "Prescription"),
                            ("continuation_care", "Continuation of Care"),
                        ],
                        max_length=50,
                    ),
                ),
                ("justification", models.TextField()),
                ("request_data", models.JSONField(help_text="FHIR request payload")),
                (
                    "response_data",
                    models.JSONField(
                        blank=True, help_text="FHIR response payload", null=True
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "expires_at",
                    models.DateTimeField(help_text="Request expiration time"),
                ),
                ("source_ip", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                (
                    "requesting_country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_requests",
                        to="ncp_gateway.country",
                    ),
                ),
                (
                    "target_country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_requests",
                        to="ncp_gateway.country",
                    ),
                ),
                (
                    "requesting_professional",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ncp_gateway.healthcareprofessional",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ncp_gateway.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("patient_lookup", "Patient Lookup"),
                            ("data_access", "Data Access"),
                            ("data_share", "Data Sharing"),
                            ("consent_change", "Consent Change"),
                            ("login", "User Login"),
                            ("logout", "User Logout"),
                            ("system_error", "System Error"),
                            ("config_change", "Configuration Change"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "data_accessed",
                    models.TextField(
                        blank=True, help_text="Description of data accessed", null=True
                    ),
                ),
                (
                    "legal_basis",
                    models.CharField(
                        blank=True,
                        help_text="Legal basis for data processing",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("source_ip", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                ("request_data", models.JSONField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="info",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs_source",
                        to="ncp_gateway.country",
                    ),
                ),
                (
                    "target_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs_target",
                        to="ncp_gateway.country",
                    ),
                ),
                (
                    "cross_border_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ncp_gateway.crossborderrequest",
                    ),
                ),
                (
                    "professional",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ncp_gateway.healthcareprofessional",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ncp_gateway.patient",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["national_id", "country_of_origin"],
                name="ncp_gateway_nationa_c16bb5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["european_id"], name="ncp_gateway_europea_cce5bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["last_name", "first_name", "birth_date"],
                name="ncp_gateway_last_na_8db208_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="crossborderrequest",
            index=models.Index(
                fields=["status", "created_at"], name="ncp_gateway_status_d7797c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="crossborderrequest",
            index=models.Index(
                fields=["patient", "service_type"],
                name="ncp_gateway_patient_dc6fe8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="crossborderrequest",
            index=models.Index(
                fields=["requesting_country", "target_country"],
                name="ncp_gateway_request_695a59_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["timestamp", "event_type"],
                name="ncp_gateway_timesta_52e4cb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["patient", "timestamp"], name="ncp_gateway_patient_622e7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["user", "timestamp"], name="ncp_gateway_user_id_f4bc30_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["source_ip", "timestamp"], name="ncp_gateway_source__090c1b_idx"
            ),
        ),
    ]

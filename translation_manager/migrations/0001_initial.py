# Generated by Django 5.2.4 on 2025-07-28 14:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("patient_data", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TerminologySystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the terminology system (e.g., 'ICD-10', 'SNOMED CT')",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "oid",
                    models.CharField(
                        help_text="Object identifier for the terminology system",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "version",
                    models.CharField(
                        blank=True,
                        help_text="Version of the terminology system",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Terminology System",
                "verbose_name_plural": "Terminology Systems",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TranslationService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("TERMINOLOGY", "Medical Terminology Translation"),
                            ("TEXT", "Free Text Translation"),
                            ("HYBRID", "Hybrid (Terminology + Text)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "endpoint_url",
                    models.URLField(
                        help_text="URL of the translation service endpoint"
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True,
                        help_text="API key for authentication (if required)",
                        max_length=200,
                    ),
                ),
                (
                    "supported_languages",
                    models.TextField(
                        help_text="Comma-separated list of supported language codes"
                    ),
                ),
                ("timeout_seconds", models.IntegerField(default=30)),
                ("max_retries", models.IntegerField(default=3)),
                ("is_active", models.BooleanField(default=True)),
                ("total_requests", models.IntegerField(default=0)),
                ("successful_requests", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Translation Service",
                "verbose_name_plural": "Translation Services",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="LanguageTranslation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("concept_code", models.CharField(max_length=100)),
                (
                    "language_code",
                    models.CharField(
                        help_text="ISO 639 language code (e.g., 'en-GB', 'de-DE', 'fr-FR')",
                        max_length=10,
                    ),
                ),
                (
                    "translated_name",
                    models.CharField(
                        help_text="Translated term in the specified language",
                        max_length=500,
                    ),
                ),
                (
                    "is_preferred",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the preferred translation",
                    ),
                ),
                (
                    "translation_source",
                    models.CharField(
                        blank=True,
                        help_text="Source of the translation (e.g., official dictionary, expert)",
                        max_length=100,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "terminology_system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="translation_manager.terminologysystem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Language Translation",
                "verbose_name_plural": "Language Translations",
                "indexes": [
                    models.Index(
                        fields=["terminology_system", "concept_code", "language_code"],
                        name="translation_termino_cb0f3a_idx",
                    )
                ],
                "unique_together": {
                    (
                        "terminology_system",
                        "concept_code",
                        "language_code",
                        "translated_name",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="CountrySpecificMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_code", models.CharField(max_length=100)),
                ("source_display_name", models.CharField(max_length=500)),
                ("target_code", models.CharField(max_length=100)),
                ("target_display_name", models.CharField(max_length=500)),
                (
                    "mapping_quality",
                    models.CharField(
                        choices=[
                            ("HIGH", "High Quality"),
                            ("MEDIUM", "Medium Quality"),
                            ("LOW", "Low Quality"),
                            ("MANUAL", "Requires Manual Review"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                (
                    "usage_frequency",
                    models.IntegerField(
                        default=0, help_text="How often this mapping has been used"
                    ),
                ),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "member_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="concept_mappings",
                        to="patient_data.memberstate",
                    ),
                ),
                (
                    "source_terminology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="country_source_mappings",
                        to="translation_manager.terminologysystem",
                    ),
                ),
                (
                    "target_terminology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="country_target_mappings",
                        to="translation_manager.terminologysystem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country-Specific Mapping",
                "verbose_name_plural": "Country-Specific Mappings",
                "unique_together": {
                    (
                        "member_state",
                        "source_terminology",
                        "source_code",
                        "target_terminology",
                        "target_code",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="ConceptMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_code", models.CharField(max_length=100)),
                ("source_display_name", models.CharField(max_length=500)),
                ("target_code", models.CharField(max_length=100)),
                ("target_display_name", models.CharField(max_length=500)),
                (
                    "mapping_type",
                    models.CharField(
                        choices=[
                            ("EQUIVALENT", "Equivalent"),
                            ("WIDER", "Wider"),
                            ("NARROWER", "Narrower"),
                            ("RELATED", "Related"),
                            ("INEXACT", "Inexact"),
                        ],
                        default="EQUIVALENT",
                        max_length=20,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=1.0, help_text="Confidence score from 0.0 to 1.0"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source_system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_mappings",
                        to="translation_manager.terminologysystem",
                    ),
                ),
                (
                    "target_system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="target_mappings",
                        to="translation_manager.terminologysystem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Concept Mapping",
                "verbose_name_plural": "Concept Mappings",
                "indexes": [
                    models.Index(
                        fields=["source_system", "source_code"],
                        name="translation_source__6f5c03_idx",
                    ),
                    models.Index(
                        fields=["target_system", "target_code"],
                        name="translation_target__fff38b_idx",
                    ),
                ],
                "unique_together": {
                    ("source_system", "source_code", "target_system", "target_code")
                },
            },
        ),
        migrations.CreateModel(
            name="TranslationCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_language", models.CharField(max_length=10)),
                ("source_text", models.TextField()),
                (
                    "source_hash",
                    models.CharField(
                        db_index=True,
                        help_text="SHA-256 hash of source text for quick lookup",
                        max_length=64,
                    ),
                ),
                ("target_language", models.CharField(max_length=10)),
                ("translated_text", models.TextField()),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True,
                        help_text="Confidence score from translation service",
                        null=True,
                    ),
                ),
                ("usage_count", models.IntegerField(default=1)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Optional expiration time for cache entry",
                        null=True,
                    ),
                ),
                (
                    "translation_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cached_translations",
                        to="translation_manager.translationservice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Translation Cache",
                "verbose_name_plural": "Translation Cache Entries",
                "indexes": [
                    models.Index(
                        fields=["source_hash", "source_language", "target_language"],
                        name="translation_source__f72df6_idx",
                    ),
                    models.Index(
                        fields=["last_accessed"], name="translation_last_ac_7283d2_idx"
                    ),
                ],
                "unique_together": {
                    ("source_hash", "source_language", "target_language")
                },
            },
        ),
    ]

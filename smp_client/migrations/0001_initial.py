# Generated by Django 5.2.4 on 2025-07-26 23:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DocumentTypeScheme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheme_id", models.CharField(max_length=100, unique=True)),
                ("scheme_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("ehealth", "eHealth"),
                            ("eprocurement", "eProcurement"),
                            ("einvoicing", "eInvoicing"),
                            ("customs", "Customs"),
                            ("other", "Other"),
                        ],
                        default="ehealth",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "domain_code",
                    models.CharField(
                        help_text="Domain identifier (e.g., ehealth-actorid-qns)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("domain_name", models.CharField(max_length=200)),
                (
                    "sml_subdomain",
                    models.CharField(
                        help_text="SML subdomain for DNS lookups", max_length=100
                    ),
                ),
                ("smp_url", models.URLField(help_text="Base SMP server URL")),
                (
                    "is_test_domain",
                    models.BooleanField(
                        default=True, help_text="Whether this is a test/training domain"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["domain_name"],
            },
        ),
        migrations.CreateModel(
            name="ParticipantIdentifierScheme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheme_id", models.CharField(max_length=100, unique=True)),
                ("scheme_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "validation_pattern",
                    models.CharField(
                        blank=True,
                        help_text="Regex pattern for validation",
                        max_length=500,
                    ),
                ),
                ("example_value", models.CharField(blank=True, max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProcessIdentifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("process_identifier", models.CharField(max_length=500)),
                (
                    "process_scheme",
                    models.CharField(default="cenbii-procid-ubl", max_length=200),
                ),
                ("process_name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("is_ehealth_process", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="SMPConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "european_smp_url",
                    models.URLField(
                        default="https://smp-ehealth-trn.acc.edelivery.tech.ec.europa.eu",
                        help_text="European test SMP server URL",
                    ),
                ),
                (
                    "sync_enabled",
                    models.BooleanField(
                        default=True, help_text="Enable sync with European SMP"
                    ),
                ),
                (
                    "sync_interval_hours",
                    models.IntegerField(default=24, help_text="Sync interval in hours"),
                ),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("local_smp_enabled", models.BooleanField(default=True)),
                (
                    "local_domain_code",
                    models.CharField(default="ehealth-actorid-qns", max_length=100),
                ),
                ("api_enabled", models.BooleanField(default=True)),
                ("api_key", models.CharField(blank=True, max_length=255)),
                (
                    "default_certificate",
                    models.TextField(
                        blank=True, help_text="Default certificate for new endpoints"
                    ),
                ),
            ],
            options={
                "verbose_name": "SMP Configuration",
                "verbose_name_plural": "SMP Configuration",
            },
        ),
        migrations.CreateModel(
            name="DocumentType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("document_type_identifier", models.CharField(max_length=500)),
                ("document_name", models.CharField(max_length=200)),
                ("document_version", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "profile_id",
                    models.CharField(
                        blank=True,
                        help_text="eHealth profile identifier",
                        max_length=200,
                    ),
                ),
                (
                    "customization_id",
                    models.CharField(
                        blank=True, help_text="Document customization", max_length=200
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "document_scheme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.documenttypescheme",
                    ),
                ),
            ],
            options={
                "unique_together": {("document_type_identifier", "document_scheme")},
            },
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "participant_identifier",
                    models.CharField(
                        help_text="Participant identifier value", max_length=500
                    ),
                ),
                ("participant_name", models.CharField(blank=True, max_length=200)),
                (
                    "country_code",
                    models.CharField(
                        blank=True, help_text="ISO 3166-1 alpha-2", max_length=3
                    ),
                ),
                ("organization_type", models.CharField(blank=True, max_length=100)),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                ("contact_phone", models.CharField(blank=True, max_length=50)),
                (
                    "certificate_subject_dn",
                    models.TextField(
                        blank=True, help_text="Certificate subject distinguished name"
                    ),
                ),
                ("certificate_serial", models.CharField(blank=True, max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.domain",
                    ),
                ),
                (
                    "participant_scheme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.participantidentifierscheme",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "extension_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional extension data"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "participant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_group",
                        to="smp_client.participant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceMetadata",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("service_description", models.TextField(blank=True)),
                ("technical_contact_url", models.URLField(blank=True)),
                ("technical_information_url", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.documenttype",
                    ),
                ),
                (
                    "service_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="smp_client.servicegroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Endpoint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("endpoint_url", models.URLField(help_text="Service endpoint URL")),
                (
                    "transport_profile",
                    models.CharField(
                        default="bdxr-transport-ebms3-as4-v1p0",
                        help_text="Transport profile identifier",
                        max_length=200,
                    ),
                ),
                (
                    "requires_business_level_signature",
                    models.BooleanField(default=False),
                ),
                (
                    "minimum_authentication_level",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "certificate",
                    models.TextField(help_text="Base64 encoded certificate"),
                ),
                (
                    "service_activation_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "service_expiration_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("technical_contact_url", models.URLField(blank=True)),
                ("service_description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.processidentifier",
                    ),
                ),
                (
                    "service_metadata",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="endpoints",
                        to="smp_client.servicemetadata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SMPQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("participant_id", models.CharField(max_length=500)),
                ("participant_scheme", models.CharField(max_length=200)),
                ("document_type_id", models.CharField(blank=True, max_length=500)),
                ("document_scheme", models.CharField(blank=True, max_length=200)),
                ("source_ip", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                (
                    "query_type",
                    models.CharField(
                        choices=[
                            ("service_group", "Service Group Lookup"),
                            ("service_metadata", "Service Metadata Lookup"),
                            ("participant_list", "Participant List"),
                            ("domain_list", "Domain List"),
                        ],
                        max_length=50,
                    ),
                ),
                ("response_status", models.CharField(default="success", max_length=20)),
                ("response_time_ms", models.IntegerField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["timestamp", "query_type"],
                        name="smp_client__timesta_7faf5b_idx",
                    ),
                    models.Index(
                        fields=["participant_id", "participant_scheme"],
                        name="smp_client__partici_9d4ee1_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="participant",
            index=models.Index(
                fields=["participant_identifier", "participant_scheme"],
                name="smp_client__partici_d06f45_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="participant",
            index=models.Index(
                fields=["country_code", "domain"], name="smp_client__country_7c0683_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="participant",
            unique_together={
                ("participant_identifier", "participant_scheme", "domain")
            },
        ),
        migrations.AlterUniqueTogether(
            name="servicemetadata",
            unique_together={("service_group", "document_type")},
        ),
    ]

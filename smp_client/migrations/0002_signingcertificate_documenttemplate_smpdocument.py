# Generated by Django 5.2.4 on 2025-07-26 23:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("smp_client", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SigningCertificate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("certificate_name", models.CharField(max_length=200)),
                ("certificate_type", models.CharField(default="X.509", max_length=50)),
                ("certificate_file", models.FileField(upload_to="certificates/")),
                (
                    "private_key_file",
                    models.FileField(
                        blank=True, null=True, upload_to="certificates/private/"
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=500)),
                ("issuer", models.CharField(blank=True, max_length=500)),
                ("serial_number", models.CharField(blank=True, max_length=100)),
                ("fingerprint", models.CharField(blank=True, max_length=100)),
                ("valid_from", models.DateTimeField(blank=True, null=True)),
                ("valid_to", models.DateTimeField(blank=True, null=True)),
                ("is_default", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["certificate_name"],
            },
        ),
        migrations.CreateModel(
            name="DocumentTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("template_name", models.CharField(max_length=200)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("service_group", "Service Group"),
                            ("service_metadata", "Service Metadata"),
                            ("endpoint", "Endpoint"),
                            ("search_mask", "Search Mask"),
                            ("certificate", "Certificate"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "xml_template",
                    models.TextField(help_text="XML template with placeholders"),
                ),
                (
                    "default_values",
                    models.JSONField(
                        default=dict, help_text="Default values for template fields"
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["template_name"],
                "unique_together": {("document_type", "is_default")},
            },
        ),
        migrations.CreateModel(
            name="SMPDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("service_group", "Service Group"),
                            ("service_metadata", "Service Metadata"),
                            ("endpoint", "Endpoint"),
                            ("search_mask", "Search Mask"),
                            ("certificate", "Certificate"),
                        ],
                        max_length=20,
                    ),
                ),
                ("document_name", models.CharField(max_length=200)),
                ("document_description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("generated", "Generated"),
                            ("downloaded", "Downloaded"),
                            ("signed", "Signed"),
                            ("uploaded", "Uploaded to SMP"),
                            ("synchronized", "Synchronized"),
                            ("error", "Error"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "original_file",
                    models.FileField(
                        blank=True, null=True, upload_to="smp_documents/original/"
                    ),
                ),
                (
                    "signed_file",
                    models.FileField(
                        blank=True, null=True, upload_to="smp_documents/signed/"
                    ),
                ),
                (
                    "xml_content",
                    models.TextField(blank=True, help_text="Generated XML content"),
                ),
                (
                    "signature_data",
                    models.TextField(
                        blank=True, help_text="Digital signature information"
                    ),
                ),
                (
                    "smp_server_url",
                    models.URLField(
                        blank=True, help_text="SMP server where document was uploaded"
                    ),
                ),
                ("smp_upload_timestamp", models.DateTimeField(blank=True, null=True)),
                (
                    "smp_response",
                    models.TextField(
                        blank=True, help_text="Server response from upload"
                    ),
                ),
                (
                    "certificate_fingerprint",
                    models.CharField(blank=True, max_length=100),
                ),
                ("signature_timestamp", models.DateTimeField(blank=True, null=True)),
                ("signer_info", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.endpoint",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.participant",
                    ),
                ),
                (
                    "service_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.servicegroup",
                    ),
                ),
                (
                    "service_metadata",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smp_client.servicemetadata",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
